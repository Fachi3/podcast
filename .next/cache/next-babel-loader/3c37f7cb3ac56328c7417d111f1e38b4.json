{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/media/fachi/Backups/Anthill/Next_projects/podcast/pages/channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Error from 'error/next';\nexport default class extends React.Component {\n  static async getInitialProps({\n    query\n  }) {\n    try {\n      let idChannel = query.id;\n      let [reqChannel, reqSeries, reqAudios] = await _Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      return {\n        channel,\n        audioClips,\n        series,\n        statuCode: 200\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statuCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"jsx-2404818762\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"header\", {\n      className: \"jsx-2404818762\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Podcast\"), __jsx(\"h1\", {\n      className: \"jsx-2404818762\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, channel.title), __jsx(\"h2\", {\n      className: \"jsx-2404818762\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Series\"), __jsx(\"div\", {\n      className: \"jsx-2404818762\" + \" \" + \"channels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, series.map(serie => __jsx(Link, {\n      href: `/channel?id=${serie.id}`,\n      prefetch: true,\n      key: serie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"jsx-2404818762\" + \" \" + \"channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: serie.urls.logo_image.original,\n      alt: \"logo-serie\",\n      className: \"jsx-2404818762\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), __jsx(\"h2\", {\n      className: \"jsx-2404818762\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, serie.title))))), __jsx(\"h2\", {\n      className: \"jsx-2404818762\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Ultimos Podcasts\"), __jsx(\"div\", {\n      className: \"jsx-2404818762\" + \" \" + \"channels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, audioClips.map(clip => __jsx(Link, {\n      href: `/podcast?id=${clip.id}`,\n      prefetch: true,\n      key: clip.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"jsx-2404818762\" + \" \" + \"podcast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: clip.urls.image,\n      alt: \"\",\n      className: \"jsx-2404818762\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), __jsx(\"h3\", {\n      className: \"jsx-2404818762\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, clip.title), __jsx(\"div\", {\n      className: \"jsx-2404818762\" + \" \" + 'meta',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, Math.ceil(clip.duration / 60), \" minutes\"))))), __jsx(_JSXStyle, {\n      id: \"1837182031\",\n      __self: this\n    }, \"header.jsx-2404818762{color:#fff;background:#8756ca;padding:15px;text-align:center;}.channels.jsx-2404818762{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}a.channel.jsx-2404818762{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-2404818762 img.jsx-2404818762{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h1.jsx-2404818762{font-weight:600;padding:15px;}h2.jsx-2404818762{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}.podcast.jsx-2404818762{display:block;-webkit-text-decoration:none;text-decoration:none;color:#333;padding:15px;border-bottom:1px solid rgba(0,0,0,0.2);cursor:pointer;}.podcast.jsx-2404818762:hover{color:#000;}.podcast.jsx-2404818762 h3.jsx-2404818762{margin:0;}.podcast.jsx-2404818762 .meta.jsx-2404818762{color:#666;margin-top:0.5em;font-size:0.8em;}.podcast.jsx-2404818762 img.jsx-2404818762{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tZWRpYS9mYWNoaS9CYWNrdXBzL0FudGhpbGwvTmV4dF9wcm9qZWN0cy9wb2RjYXN0L3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUV3QixBQUdnQyxBQU1FLEFBTUMsQUFNSSxBQUtGLEFBSUosQUFPRSxBQVFILEFBR0YsQUFHRSxBQUtPLFNBUHRCLEVBN0N1QixBQTBDdkIsQUFNcUIsQ0FyQkQsQ0FyQkYsQ0FNTSxBQXNCQyxFQVhSLEVBTDJCLEFBbUNBLFNBOUMzQixDQXFCRyxBQXFCQSxDQXpCcEIsQ0F2QmlCLElBWUYsTUFMaUQsR0FOMUMsQ0EyQlQsQUFxQmIsQ0FwQ3lCLFFBZ0JILEtBWFAsQUFtQ0EsR0FuRGYsR0FnQ2UsS0FmZixBQW1DQSxFQXhCQSxJQUtpQixhQUMyQixPQXRCNUMsR0FOQSw4QkE2Qm1CLGVBQ25CIiwiZmlsZSI6Ii9tZWRpYS9mYWNoaS9CYWNrdXBzL0FudGhpbGwvTmV4dF9wcm9qZWN0cy9wb2RjYXN0L3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2lzb21vcnBoaWMtZmV0Y2gnXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5pbXBvcnQgRXJyb3IgZnJvbSAnZXJyb3IvbmV4dCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XG4gICAgXG4gICAgc3RhdGljIGFzeW5jIGdldEluaXRpYWxQcm9wcyh7cXVlcnl9KXtcbiAgICAgICAgdHJ5e1xuICAgICAgICAgICAgbGV0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkXG5cbiAgICAgICAgICAgIGxldCBbcmVxQ2hhbm5lbCwgcmVxU2VyaWVzLCByZXFBdWRpb3NdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxuICAgICAgICAgICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2ApLFxuICAgICAgICAgICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2ApXG4gICAgICAgICAgICBdKVxuXG4gICAgICAgICAgICBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKVxuICAgICAgICAgICAgbGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWxcblxuICAgICAgICAgICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpXG4gICAgICAgICAgICBsZXQgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzXG5cbiAgICAgICAgICAgIGxldCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKVxuICAgICAgICAgICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHNcblxuICAgICAgICAgICAgcmV0dXJuIHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dUNvZGU6MjAwIH1cbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIHJldHVybiB7IGNoYW5uZWw6IG51bGwsIGF1ZGlvQ2xpcHM6IG51bGwsIHNlcmllczpudWxsLCBzdGF0dUNvZGU6NTAzIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7Y2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlfSA9IHRoaXMucHJvcHNcblxuICAgICAgICBpZihzdGF0dXNDb2RlICE9PSAyMDApe1xuICAgICAgICAgICAgcmV0dXJuIDxFcnJvciBzdGF0dXNDb2RlPXtzdGF0dXNDb2RlfSAvPlxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIDxkaXY+XG4gICAgICAgICAgICA8aGVhZGVyPlBvZGNhc3Q8L2hlYWRlcj5cblxuICAgICAgICAgICAgPGgxPntjaGFubmVsLnRpdGxlfTwvaDE+XG5cbiAgICAgICAgICAgIDxoMj5TZXJpZXM8L2gyPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGFubmVsc1wiPlxuICAgICAgICAgICAgICAgIHtzZXJpZXMubWFwKChzZXJpZSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPXtgL2NoYW5uZWw/aWQ9JHtzZXJpZS5pZH1gfSBwcmVmZXRjaCBrZXk9e3NlcmllLmlkfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImNoYW5uZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17c2VyaWUudXJscy5sb2dvX2ltYWdlLm9yaWdpbmFsfSBhbHQ9XCJsb2dvLXNlcmllXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+e3NlcmllLnRpdGxlfTwvaDI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8aDI+VWx0aW1vcyBQb2RjYXN0czwvaDI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNoYW5uZWxzXCI+XG4gICAgICAgICAgICAgICAge2F1ZGlvQ2xpcHMubWFwKChjbGlwKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvcG9kY2FzdD9pZD0ke2NsaXAuaWR9YH0gcHJlZmV0Y2gga2V5PXtjbGlwLmlkfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cInBvZGNhc3RcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXsgY2xpcC51cmxzLmltYWdlIH0gYWx0PVwiXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz57Y2xpcC50aXRsZX08L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtZXRhJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBNYXRoLmNlaWwoY2xpcC5kdXJhdGlvbiAvIDYwKSB9IG1pbnV0ZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgaGVhZGVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICM4NzU2Y2E7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmNoYW5uZWxzIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYS5jaGFubmVsIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuY2hhbm5lbCBpbWcge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwwLDAsMC4xNSk7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBoMSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnBvZGNhc3Qge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4yKTtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAucG9kY2FzdDpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAucG9kY2FzdCBoMyB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnBvZGNhc3QgLm1ldGEge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzY2NjtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMC41ZW07XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5wb2RjYXN0IGltZyB7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggcmdiYSgwLDAsMCwwLjE1KTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuXG4gICAgICAgICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBzeXN0ZW0tdWk7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgfVxufSJdfQ== */\\n/*@ sourceURL=/media/fachi/Backups/Anthill/Next_projects/podcast/pages/channel.js */\"), __jsx(_JSXStyle, {\n      id: \"2493491500\",\n      __self: this\n    }, \"body{margin:0;font-family:system-ui;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tZWRpYS9mYWNoaS9CYWNrdXBzL0FudGhpbGwvTmV4dF9wcm9qZWN0cy9wb2RjYXN0L3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0krQixBQUc4QixTQUNhLHNCQUNMLGlCQUNyQiIsImZpbGUiOiIvbWVkaWEvZmFjaGkvQmFja3Vwcy9BbnRoaWxsL05leHRfcHJvamVjdHMvcG9kY2FzdC9wYWdlcy9jaGFubmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJ1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuaW1wb3J0IEVycm9yIGZyb20gJ2Vycm9yL25leHQnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xuICAgIFxuICAgIHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoe3F1ZXJ5fSl7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICAgIGxldCBpZENoYW5uZWwgPSBxdWVyeS5pZFxuXG4gICAgICAgICAgICBsZXQgW3JlcUNoYW5uZWwsIHJlcVNlcmllcywgcmVxQXVkaW9zXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcbiAgICAgICAgICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKSxcbiAgICAgICAgICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKVxuICAgICAgICAgICAgXSlcblxuICAgICAgICAgICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKClcbiAgICAgICAgICAgIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsXG5cbiAgICAgICAgICAgIGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKVxuICAgICAgICAgICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVsc1xuXG4gICAgICAgICAgICBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKClcbiAgICAgICAgICAgIGxldCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvcy5ib2R5LmF1ZGlvX2NsaXBzXG5cbiAgICAgICAgICAgIHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVDb2RlOjIwMCB9XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICByZXR1cm4geyBjaGFubmVsOiBudWxsLCBhdWRpb0NsaXBzOiBudWxsLCBzZXJpZXM6bnVsbCwgc3RhdHVDb2RlOjUwMyB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgY29uc3Qge2NoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZX0gPSB0aGlzLnByb3BzXG5cbiAgICAgICAgaWYoc3RhdHVzQ29kZSAhPT0gMjAwKXtcbiAgICAgICAgICAgIHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz5cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiA8ZGl2PlxuICAgICAgICAgICAgPGhlYWRlcj5Qb2RjYXN0PC9oZWFkZXI+XG5cbiAgICAgICAgICAgIDxoMT57Y2hhbm5lbC50aXRsZX08L2gxPlxuXG4gICAgICAgICAgICA8aDI+U2VyaWVzPC9oMj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2hhbm5lbHNcIj5cbiAgICAgICAgICAgICAgICB7c2VyaWVzLm1hcCgoc2VyaWUpID0+IChcbiAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj17YC9jaGFubmVsP2lkPSR7c2VyaWUuaWR9YH0gcHJlZmV0Y2gga2V5PXtzZXJpZS5pZH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJjaGFubmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3NlcmllLnVybHMubG9nb19pbWFnZS5vcmlnaW5hbH0gYWx0PVwibG9nby1zZXJpZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyPntzZXJpZS50aXRsZX08L2gyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGgyPlVsdGltb3MgUG9kY2FzdHM8L2gyPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGFubmVsc1wiPlxuICAgICAgICAgICAgICAgIHthdWRpb0NsaXBzLm1hcCgoY2xpcCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPXtgL3BvZGNhc3Q/aWQ9JHtjbGlwLmlkfWB9IHByZWZldGNoIGtleT17Y2xpcC5pZH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJwb2RjYXN0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17IGNsaXAudXJscy5pbWFnZSB9IGFsdD1cIlwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+e2NsaXAudGl0bGV9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWV0YSc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgTWF0aC5jZWlsKGNsaXAuZHVyYXRpb24gLyA2MCkgfSBtaW51dGVzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIGhlYWRlciB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjODc1NmNhO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5jaGFubmVscyB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICAgICAgICAgIGdyaWQtZ2FwOiAxNXB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgxNjBweCwgMWZyKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGEuY2hhbm5lbCB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmNoYW5uZWwgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaDEge1xuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBoMiB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAwLjllbTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5wb2RjYXN0IHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMik7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnBvZGNhc3Q6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnBvZGNhc3QgaDMge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5wb2RjYXN0IC5tZXRhIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICM2NjY7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDAuNWVtO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOGVtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAucG9kY2FzdCBpbWcge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwwLDAsMC4xNSk7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cblxuICAgICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgICAgICAgICBib2R5IHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn0iXX0= */\\n/*@ sourceURL=/media/fachi/Backups/Anthill/Next_projects/podcast/pages/channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/media/fachi/Backups/Anthill/Next_projects/podcast/pages/channel.js"],"names":["Link","Error","React","Component","getInitialProps","query","idChannel","id","reqChannel","reqSeries","reqAudios","all","fetch","dataChannel","json","channel","body","dataSeries","series","channels","dataAudios","audioClips","audio_clips","statuCode","e","render","statusCode","props","title","map","serie","urls","logo_image","original","clip","image","Math","ceil","duration"],"mappings":";;;;;AAAA,OAAO,kBAAP;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA6B;AAExC,eAAaC,eAAb,CAA6B;AAACC,IAAAA;AAAD,GAA7B,EAAqC;AACjC,QAAG;AACC,UAAIC,SAAS,GAAGD,KAAK,CAACE,EAAtB;AAEA,UAAI,CAACC,UAAD,EAAaC,SAAb,EAAwBC,SAAxB,IAAqC,MAAM,SAAQC,GAAR,CAAY,CACvDC,KAAK,CAAE,sCAAqCN,SAAU,EAAjD,CADkD,EAEvDM,KAAK,CAAE,sCAAqCN,SAAU,iBAAjD,CAFkD,EAGvDM,KAAK,CAAE,sCAAqCN,SAAU,cAAjD,CAHkD,CAAZ,CAA/C;AAMA,UAAIO,WAAW,GAAG,MAAML,UAAU,CAACM,IAAX,EAAxB;AACA,UAAIC,OAAO,GAAGF,WAAW,CAACG,IAAZ,CAAiBD,OAA/B;AAEA,UAAIE,UAAU,GAAG,MAAMR,SAAS,CAACK,IAAV,EAAvB;AACA,UAAII,MAAM,GAAGD,UAAU,CAACD,IAAX,CAAgBG,QAA7B;AAEA,UAAIC,UAAU,GAAG,MAAMV,SAAS,CAACI,IAAV,EAAvB;AACA,UAAIO,UAAU,GAAGD,UAAU,CAACJ,IAAX,CAAgBM,WAAjC;AAEA,aAAO;AAAEP,QAAAA,OAAF;AAAWM,QAAAA,UAAX;AAAuBH,QAAAA,MAAvB;AAA+BK,QAAAA,SAAS,EAAC;AAAzC,OAAP;AACH,KAnBD,CAmBE,OAAMC,CAAN,EAAQ;AACN,aAAO;AAAET,QAAAA,OAAO,EAAE,IAAX;AAAiBM,QAAAA,UAAU,EAAE,IAA7B;AAAmCH,QAAAA,MAAM,EAAC,IAA1C;AAAgDK,QAAAA,SAAS,EAAC;AAA1D,OAAP;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACV,MAAAA,OAAD;AAAUM,MAAAA,UAAV;AAAsBH,MAAAA,MAAtB;AAA8BQ,MAAAA;AAA9B,QAA4C,KAAKC,KAAvD;;AAEA,QAAGD,UAAU,KAAK,GAAlB,EAAsB;AAClB,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,OAAO,CAACa,KAAb,CAHG,EAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALG,EAMH;AAAA,0CAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,MAAM,CAACW,GAAP,CAAYC,KAAD,IACR,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,eAAcA,KAAK,CAACvB,EAAG,EAApC;AAAuC,MAAA,QAAQ,MAA/C;AAAgD,MAAA,GAAG,EAAEuB,KAAK,CAACvB,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA,0CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEuB,KAAK,CAACC,IAAN,CAAWC,UAAX,CAAsBC,QAAhC;AAA0C,MAAA,GAAG,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,KAAK,CAACF,KAAX,CAFJ,CADJ,CADH,CADL,CANG,EAiBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBG,EAkBH;AAAA,0CAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,UAAU,CAACQ,GAAX,CAAgBK,IAAD,IACZ,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,eAAcA,IAAI,CAAC3B,EAAG,EAAnC;AAAsC,MAAA,QAAQ,MAA9C;AAA+C,MAAA,GAAG,EAAE2B,IAAI,CAAC3B,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA,0CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,GAAG,EAAG2B,IAAI,CAACH,IAAL,CAAUI,KAArB;AAA6B,MAAA,GAAG,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACN,KAAV,CAFJ,EAGI;AAAA,0CAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMQ,IAAI,CAACC,IAAL,CAAUH,IAAI,CAACI,QAAL,GAAgB,EAA1B,CADN,aAHJ,CADJ,CADH,CADL,CAlBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,w0NAAP;AAoGH;;AAtIuC","sourcesContent":["import 'isomorphic-fetch'\nimport Link from 'next/link'\nimport Error from 'error/next'\n\nexport default class extends React.Component{\n    \n    static async getInitialProps({query}){\n        try{\n            let idChannel = query.id\n\n            let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n                fetch(`https://api.audioboom.com/channels/${idChannel}`),\n                fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n                fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n            ])\n\n            let dataChannel = await reqChannel.json()\n            let channel = dataChannel.body.channel\n\n            let dataSeries = await reqSeries.json()\n            let series = dataSeries.body.channels\n\n            let dataAudios = await reqAudios.json()\n            let audioClips = dataAudios.body.audio_clips\n\n            return { channel, audioClips, series, statuCode:200 }\n        } catch(e){\n            return { channel: null, audioClips: null, series:null, statuCode:503 }\n        }\n    }\n\n    render(){\n        const {channel, audioClips, series, statusCode} = this.props\n\n        if(statusCode !== 200){\n            return <Error statusCode={statusCode} />\n        }\n\n        return <div>\n            <header>Podcast</header>\n\n            <h1>{channel.title}</h1>\n\n            <h2>Series</h2>\n            <div className=\"channels\">\n                {series.map((serie) => (\n                    <Link href={`/channel?id=${serie.id}`} prefetch key={serie.id}>\n                        <a className=\"channel\">\n                            <img src={serie.urls.logo_image.original} alt=\"logo-serie\" />\n                            <h2>{serie.title}</h2>\n                        </a>\n                    </Link>\n                ))}\n            </div>\n\n            <h2>Ultimos Podcasts</h2>\n            <div className=\"channels\">\n                {audioClips.map((clip) => (\n                    <Link href={`/podcast?id=${clip.id}`} prefetch key={clip.id}>\n                        <a className=\"podcast\">\n                        <img src={ clip.urls.image } alt=\"\"/>\n                            <h3>{clip.title}</h3>\n                            <div className='meta'>\n                                { Math.ceil(clip.duration / 60) } minutes\n                            </div>\n                        </a>\n                    </Link>\n                ))}\n            </div>\n            <style jsx>{`\n                header {\n                    color: #fff;\n                    background: #8756ca;\n                    padding: 15px;\n                    text-align: center;\n                }\n                .channels {\n                    display: grid;\n                    grid-gap: 15px;\n                    padding: 15px;\n                    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n                }\n                a.channel {\n                    display: block;\n                    margin-bottom: 0.5em;\n                    color: #333;\n                    text-decoration: none;\n                }\n                .channel img {\n                    border-radius: 3px;\n                    box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n                    width: 100%;\n                }\n                h1 {\n                    font-weight: 600;\n                    padding: 15px;\n                }\n                h2 {\n                    padding: 5px;\n                    font-size: 0.9em;\n                    font-weight: 600;\n                    margin: 0;\n                    text-align: center;\n                }\n                .podcast {\n                    display: block;\n                    text-decoration: none;\n                    color: #333;\n                    padding: 15px;\n                    border-bottom: 1px solid rgba(0,0,0,0.2);\n                    cursor: pointer;\n                }\n                .podcast:hover {\n                    color: #000;\n                }\n                .podcast h3 {\n                    margin: 0;\n                }\n                .podcast .meta {\n                    color: #666;\n                    margin-top: 0.5em;\n                    font-size: 0.8em;\n                }\n                .podcast img {\n                    border-radius: 3px;\n                    box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n                    width: 100%;\n                }\n            `}</style>\n\n            <style jsx global>{`\n                body {\n                    margin: 0;\n                    font-family: system-ui;\n                    background: white;\n                }\n            `}</style>\n        </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}